import java.text.SimpleDateFormat

apply plugin: 'com.android.application'

android {
    compileSdkVersion 22
    buildToolsVersion "22.0.1"

    /**
     * VersionCode 等于奇数表示测试版本，偶数表示稳定版本
     */
    defaultConfig {
        applicationId "noyaxe.crazystone"
        minSdkVersion 14
        targetSdkVersion 22
        versionCode 1
        versionName "1.0"
    }

    signingConfigs {
        release {
            storeFile file("crazystone_debug.keystore")
            storePassword "123456"
            keyAlias "android.keystore"
            keyPassword "123456"
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        debug {
            signingConfig signingConfigs.release
            minifyEnabled false
            zipAlignEnabled true
        }
    }

    android {
        lintOptions {
            abortOnError false
        }
    }

    productFlavors {
        Test {}
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile 'com.android.support:appcompat-v7:22.2.0'
    compile 'com.android.support:design:22.2.0'
    compile 'com.android.support:recyclerview-v7:22.2.0'
    compile 'com.android.support:support-v4:21.+'
    compile project(':corelib1')
}


def buildTime() {
    def df = new SimpleDateFormat("yyyy-MM-dd")
    df.setTimeZone(TimeZone.getDefault())
    return df.format(new Date())
}

android.applicationVariants.all { variant ->
    def flavor = "debug"
    if (variant.productFlavors.size() > 0) {
        flavor = variant.productFlavors[0].name
    }

    variant.outputs.each { output ->
        if (buildType.name == "release") {
            output.outputFile = file("${buildDir}/outputs/apk/CrazyStone-${flavor}-${buildType.name}-V${versionName}-" + buildTime() + ".apk")
        } else {
            output.outputFile = file("${buildDir}/outputs/apk/CrazyStone-${flavor}-${buildType.name}-V${versionName}-" + buildTime() + ".apk")
        }
    }
}